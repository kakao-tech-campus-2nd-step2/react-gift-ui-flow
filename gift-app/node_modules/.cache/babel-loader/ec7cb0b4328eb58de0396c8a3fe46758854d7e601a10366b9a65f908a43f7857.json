{"ast":null,"code":"var _jsxFileName = \"/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Button/Button.tsx\";\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  primary = 'secondary',\n  size = 'medium',\n  backgroundColor = '',\n  label,\n  theme,\n  ...props\n}) => {\n  const styleByTheme = {\n    'Con': {\n      primary: 'button--Con-primary',\n      secondary: 'button--Con-secondary'\n    },\n    'Muji': {\n      primary: 'button--Muji-primary',\n      secondary: 'button--Muji-secondary'\n    },\n    'JayG': {\n      primary: 'button--JayG-primary',\n      secondary: 'button--JayG-secondary'\n    }\n  };\n\n  // mode 변수에서 결정한 primary prop의 값에 따라 CSS 적용\n  const modeTheme = theme ? styleByTheme[theme][primary] : '';\n  const sizeClass = size === 'responsive' ? 'button--responsive' : `button--${size}`;\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    type: \"button\",\n    className: ['button', sizeClass, modeTheme].join(' '),\n    style: {\n      backgroundColor\n    },\n    ...props,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst StyledButton = styled.button`\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n\n  &.button--small {\n    font-size: 12px;\n    padding: 10px 16px;\n  }\n\n  &.button--medium {\n    font-size: 14px;\n    padding: 11px 20px;\n  }\n\n  &.button--large {\n    font-size: 16px;\n    padding: 12px 24px;\n  }\n\n  @media (max-width: 600px) {\n    &.button--responsive {\n      font-size: 12px;\n      padding: 8px 16px;\n    }\n  }\n\n  @media (min-width: 601px) and (max-width: 1200px) {\n    &.button--responsive {\n      font-size: 24px;\n      padding: 16px 32px;\n    }\n  }\n\n  @media (min-width: 1201px) {\n    &.button--responsive {\n      font-size: 36px;\n      padding: 24px 48px;\n    }\n  }\n\n  &.button--Con-primary {\n    background-color: green !important;\n    color: white !important;\n  }\n\n  &.button--Con-secondary {\n    background-color: lightgreen !important;\n    color: darkgreen !important;\n  }\n\n  &.button--Muji-primary {\n    background-color: yellow !important;\n    color: black !important;\n  }\n\n  &.button--Muji-secondary {\n    background-color: lightyellow !important;\n    color: darkyellow !important;\n  }\n\n  &.button--JayG-primary {\n    background-color: brown !important;\n    color: whitesmoke !important;\n  }\n\n  &.button--JayG-secondary {\n    background-color: lightbrown !important;\n    color: darkbrown !important;\n  }\n`;\n_c2 = StyledButton;\nexport default Button;\n;\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"primary\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'primary' | 'secondary'\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'primary'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'secondary'\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"'secondary'\",\n        \"computed\": false\n      }\n    },\n    \"backgroundColor\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      }\n    },\n    \"size\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'small' | 'medium' | 'large'| 'responsive'\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'small'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'medium'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'large'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'responsive'\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      }\n    },\n    \"label\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"() => void\",\n        \"signature\": {\n          \"arguments\": [],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"theme\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'Con' | 'Muji' | 'JayG'\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'Con'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'Muji'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'JayG'\"\n        }]\n      },\n      \"description\": \"\"\n    }\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StyledButton\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","Button","primary","size","backgroundColor","label","theme","props","styleByTheme","secondary","modeTheme","sizeClass","StyledButton","type","className","join","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","button","_c2","__docgenInfo","$RefreshReg$"],"sources":["/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Button/Button.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\ninterface ButtonProps {\n  primary?: 'primary' | 'secondary';\n  backgroundColor?: string;\n  size?: 'small' | 'medium' | 'large'| 'responsive';\n  label: string;\n  onClick?: () => void;\n  theme?: 'Con' | 'Muji' | 'JayG';\n}\n\nconst Button = ({\n  primary = 'secondary',\n  size = 'medium',\n  backgroundColor = '',\n  label,\n  theme,\n  ...props\n}: ButtonProps) => {\n\nconst styleByTheme = {\n  'Con': {\n    primary: 'button--Con-primary',\n    secondary: 'button--Con-secondary',\n  },\n  'Muji': {\n    primary: 'button--Muji-primary',\n    secondary: 'button--Muji-secondary',\n  },\n  'JayG': {\n    primary: 'button--JayG-primary',\n    secondary: 'button--JayG-secondary',\n  },\n};\n\n// mode 변수에서 결정한 primary prop의 값에 따라 CSS 적용\nconst modeTheme = theme ? styleByTheme[theme][primary] : '';\nconst sizeClass = size === 'responsive' ? 'button--responsive' : `button--${size}`;\n\n  return (\n    <StyledButton\n      type='button'\n      className={['button', sizeClass, modeTheme].join(' ')}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button`\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n\n  &.button--small {\n    font-size: 12px;\n    padding: 10px 16px;\n  }\n\n  &.button--medium {\n    font-size: 14px;\n    padding: 11px 20px;\n  }\n\n  &.button--large {\n    font-size: 16px;\n    padding: 12px 24px;\n  }\n\n  @media (max-width: 600px) {\n    &.button--responsive {\n      font-size: 12px;\n      padding: 8px 16px;\n    }\n  }\n\n  @media (min-width: 601px) and (max-width: 1200px) {\n    &.button--responsive {\n      font-size: 24px;\n      padding: 16px 32px;\n    }\n  }\n\n  @media (min-width: 1201px) {\n    &.button--responsive {\n      font-size: 36px;\n      padding: 24px 48px;\n    }\n  }\n\n  &.button--Con-primary {\n    background-color: green !important;\n    color: white !important;\n  }\n\n  &.button--Con-secondary {\n    background-color: lightgreen !important;\n    color: darkgreen !important;\n  }\n\n  &.button--Muji-primary {\n    background-color: yellow !important;\n    color: black !important;\n  }\n\n  &.button--Muji-secondary {\n    background-color: lightyellow !important;\n    color: darkyellow !important;\n  }\n\n  &.button--JayG-primary {\n    background-color: brown !important;\n    color: whitesmoke !important;\n  }\n\n  &.button--JayG-secondary {\n    background-color: lightbrown !important;\n    color: darkbrown !important;\n  }\n`;\n\nexport default Button;"],"mappings":";AAAA,OAAAA,MAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAAC,MAAA,GAAAA,CAAA;EACAC,OAAA;EACAC,IAAA;EACAC,eAAA;EACAC,KAAA;EACAC,KAAA;EACA,GAAAC;AACA;EAEA,MAAAC,YAAA;IACA;MACAN,OAAA;MACAO,SAAA;IACA;IACA;MACAP,OAAA;MACAO,SAAA;IACA;IACA;MACAP,OAAA;MACAO,SAAA;IACA;EACA;;EAEA;EACA,MAAAC,SAAA,GAAAJ,KAAA,GAAAE,YAAA,CAAAF,KAAA,EAAAJ,OAAA;EACA,MAAAS,SAAA,GAAAR,IAAA,sDAAAA,IAAA;EAEA,oBACAH,OAAA,CAAAY,YAAA;IACAC,IAAA;IACAC,SAAA,aAAAH,SAAA,EAAAD,SAAA,EAAAK,IAAA;IACAC,KAAA;MAAAZ;IAAA;IAAA,GACAG,KAAA;IAAAU,QAAA,EAEAZ;EAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA;AAEA;AAAAC,EAAA,GAtCArB,MAAA;AAwCA,MAAAW,YAAA,GAAAd,MAAA,CAAAyB,MAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,GAAA,GA1EAZ,YAAA;AA4EA,eAAAX,MAAA;AAAA;AAAAA,MAAA,CAAAwB,YAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;QAAA;UAAA;UAAA;YAAA;UAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;MAAA;MAAA;IAAA;EAAA;AAAA;AAAA,IAAAH,EAAA,EAAAE,GAAA;AAAAE,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}