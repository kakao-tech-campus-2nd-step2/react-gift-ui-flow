{"ast":null,"code":"var _jsxFileName = \"/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Grid/Grid.tsx\";\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  columns,\n  gap,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    columns: columns,\n    gap: gap,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Grid;\nconst StyledGrid = styled.div`\n  display: grid;\n  width: 100%;\n  height: 100%;\n  grid-template-columns: ${({\n  columns\n}) => `repeat(${columns}, 1fr)`};\n  gap: ${({\n  gap\n}) => `${gap}px`};\n\n  & .grid-item {\n    text-align: center;\n    font-size: 14px;\n  }\n`;\n_c2 = StyledGrid;\nexport default Grid;\n;\nGrid.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Grid\",\n  \"props\": {\n    \"columns\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"gap\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"ReactReactNode\",\n        \"raw\": \"React.ReactNode\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"StyledGrid\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","Grid","columns","gap","children","StyledGrid","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","__docgenInfo","$RefreshReg$"],"sources":["/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Grid/Grid.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\ninterface GridProps {\n  columns: number;\n  gap: number;\n  children: React.ReactNode;\n}\n\nconst Grid = ({ columns, gap, children }: GridProps) => {\n  return (\n    <StyledGrid columns={columns} gap={gap}>\n      {children}\n    </StyledGrid>\n  );\n};\n\nconst StyledGrid = styled.div<{ columns: number; gap: number }>`\n  display: grid;\n  width: 100%;\n  height: 100%;\n  grid-template-columns: ${({ columns }) => `repeat(${columns}, 1fr)`};\n  gap: ${({ gap }) => `${gap}px`};\n\n  & .grid-item {\n    text-align: center;\n    font-size: 14px;\n  }\n`;\n\nexport default Grid;"],"mappings":";AAAA,OAAAA,MAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAAC,IAAA,GAAAA,CAAA;EAAAC,OAAA;EAAAC,GAAA;EAAAC;AAAA;EACA,oBACAJ,OAAA,CAAAK,UAAA;IAAAH,OAAA,EAAAA,OAAA;IAAAC,GAAA,EAAAA,GAAA;IAAAC,QAAA,EACAA;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA;AAEA;AAAAC,EAAA,GANAT,IAAA;AAQA,MAAAI,UAAA,GAAAP,MAAA,CAAAa,GAAA;AACA;AACA;AACA;AACA;EAAAT;AAAA,gBAAAA,OAAA;AACA;EAAAC;AAAA,SAAAA,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAS,GAAA,GAXAP,UAAA;AAaA,eAAAJ,IAAA;AAAA;AAAAA,IAAA,CAAAY,YAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA;EAAA;AAAA;AAAA,IAAAH,EAAA,EAAAE,GAAA;AAAAE,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}