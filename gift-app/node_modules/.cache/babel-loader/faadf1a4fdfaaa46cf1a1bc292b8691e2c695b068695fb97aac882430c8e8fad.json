{"ast":null,"code":"var _jsxFileName = \"/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/context/LoginContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext(undefined);\nexport const useLogin = () => {\n  _s();\n  const context = useContext(LoginContext);\n  if (!context) {\n    throw new Error('useLogin은 LoginProvider 내에서 사용해야 합니다.');\n  }\n  return context;\n};\n_s(useLogin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LoginProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = () => setIsLoggedIn(true);\n  const logout = () => setIsLoggedIn(false);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s2(LoginProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = LoginProvider;\nvar _c;\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","LoginContext","undefined","useLogin","_s","context","Error","LoginProvider","children","_s2","isLoggedIn","setIsLoggedIn","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/context/LoginContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface LoginContextProps {\n  isLoggedIn: boolean;\n  login: () => void;\n  logout: () => void;\n}\n\nconst LoginContext = createContext<LoginContextProps | undefined>(undefined);\n\nexport const useLogin = () => {\n  const context = useContext(LoginContext);\n  if (!context) {\n    throw new Error('useLogin은 LoginProvider 내에서 사용해야 합니다.');\n  }\n  return context;\n};\n\nexport const LoginProvider = ({ children }: { children: ReactNode }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const login = () => setIsLoggedIn(true);\n  const logout = () => setIsLoggedIn(false);\n\n  return (\n    <LoginContext.Provider value={{ isLoggedIn, login, logout }}>\n      {children}\n    </LoginContext.Provider>\n  );\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQvE,MAAMC,YAAY,gBAAGL,aAAa,CAAgCM,SAAS,CAAC;AAE5E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,GAAA;EACtE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,KAAK,GAAGA,CAAA,KAAMD,aAAa,CAAC,IAAI,CAAC;EACvC,MAAME,MAAM,GAAGA,CAAA,KAAMF,aAAa,CAAC,KAAK,CAAC;EAEzC,oBACEX,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEL,UAAU;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAL,QAAA,EACzDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACV,GAAA,CAXWF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}