{"ast":null,"code":"var _jsxFileName = \"/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Image/Image.tsx\";\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Image = ({\n  src,\n  width,\n  height,\n  ratio = 'square',\n  radius,\n  alt = '',\n  ...props\n}) => {\n  const ratioType = ratio => {\n    if (ratio === 'square') return 1 / 1;\n    if (typeof ratio === 'number') return ratio;\n    return 1;\n  };\n  const borderRadius = () => {\n    if (radius === 'circle') return '50%';\n    if (typeof radius === 'string' && !Number.isNaN(Number(radius))) return `${Number(radius)}px`;\n    if (typeof radius === 'number') return `${radius}px`;\n    return '0';\n  };\n  return /*#__PURE__*/_jsxDEV(StyledImage, {\n    src: src,\n    width: width,\n    height: height,\n    ratio: ratioType(ratio),\n    borderRadius: borderRadius(),\n    alt: alt,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = Image;\nconst StyledImage = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  width: ${({\n  width\n}) => width}px;\n  height: ${({\n  height\n}) => height}px;\n  aspect-ratio: ${({\n  ratio\n}) => ratio} !important ;\n  border-radius: ${({\n  borderRadius\n}) => borderRadius};\n`;\n_c2 = StyledImage;\nexport default Image;\n;\nImage.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Image\",\n  \"props\": {\n    \"src\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"height\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"ratio\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'square' | number\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'square'\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"'square'\",\n        \"computed\": false\n      }\n    },\n    \"radius\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'circle' | number\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'circle'\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"alt\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      }\n    }\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"Image\");\n$RefreshReg$(_c2, \"StyledImage\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","Image","src","width","height","ratio","radius","alt","props","ratioType","borderRadius","Number","isNaN","StyledImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","img","_c2","__docgenInfo","$RefreshReg$"],"sources":["/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Image/Image.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\ninterface ImageProps {\n  src: string;\n  width: number;\n  height: number;\n  ratio?: 'square' | number;\n  radius?: 'circle' | number;\n  alt?: string;\n}\n\nconst Image = ({\n  src,\n  width,\n  height,\n  ratio = 'square',\n  radius,\n  alt = '',\n  ...props\n}: ImageProps) => {\n\n  const ratioType = (ratio: 'square' | number) => {\n    if (ratio === 'square')\n      return 1 / 1;\n    if (typeof ratio === 'number')\n      return ratio;\n    return 1;\n  };\n\n  const borderRadius = (): string => {\n    if (radius === 'circle') return '50%';\n    if (typeof radius === 'string' && !Number.isNaN(Number(radius))) return `${Number(radius)}px`;\n    if (typeof radius === 'number') return `${radius}px`;\n    return '0';\n  };\n\n  return (\n    <StyledImage\n      src={src}\n      width={width}\n      height={height}\n      ratio={ratioType(ratio)}\n      borderRadius={borderRadius()}\n      alt={alt}\n      {...props} /> \n  );\n};\n\nconst StyledImage = styled.img<{ width: number; height: number; ratio: number; borderRadius: string }>`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  aspect-ratio: ${({ ratio }) => ratio} !important ;\n  border-radius: ${({ borderRadius }) => borderRadius};\n`;\n\nexport default Image;"],"mappings":";AAAA,OAAAA,MAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAAC,KAAA,GAAAA,CAAA;EACAC,GAAA;EACAC,KAAA;EACAC,MAAA;EACAC,KAAA;EACAC,MAAA;EACAC,GAAA;EACA,GAAAC;AACA;EAEA,MAAAC,SAAA,GAAAJ,KAAA;IACA,IAAAA,KAAA,eACA;IACA,WAAAA,KAAA,eACA,OAAAA,KAAA;IACA;EACA;EAEA,MAAAK,YAAA,GAAAA,CAAA;IACA,IAAAJ,MAAA;IACA,WAAAA,MAAA,kBAAAK,MAAA,CAAAC,KAAA,CAAAD,MAAA,CAAAL,MAAA,cAAAK,MAAA,CAAAL,MAAA;IACA,WAAAA,MAAA,yBAAAA,MAAA;IACA;EACA;EAEA,oBACAN,OAAA,CAAAa,WAAA;IACAX,GAAA,EAAAA,GAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,MAAA,EAAAA,MAAA;IACAC,KAAA,EAAAI,SAAA,CAAAJ,KAAA;IACAK,YAAA,EAAAA,YAAA;IACAH,GAAA,EAAAA,GAAA;IAAA,GACAC;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAEA;AAAAC,EAAA,GAnCAjB,KAAA;AAqCA,MAAAY,WAAA,GAAAf,MAAA,CAAAqB,GAAA;AACA;AACA;AACA;AACA;EAAAhB;AAAA,MAAAA,KAAA;AACA;EAAAC;AAAA,MAAAA,MAAA;AACA;EAAAC;AAAA,MAAAA,KAAA;AACA;EAAAK;AAAA,MAAAA,YAAA;AACA;AAAAU,GAAA,GARAP,WAAA;AAUA,eAAAZ,KAAA;AAAA;AAAAA,KAAA,CAAAoB,YAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;UAAA;QAAA;UAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;UAAA;QAAA;UAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;EAAA;AAAA;AAAA,IAAAH,EAAA,EAAAE,GAAA;AAAAE,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}