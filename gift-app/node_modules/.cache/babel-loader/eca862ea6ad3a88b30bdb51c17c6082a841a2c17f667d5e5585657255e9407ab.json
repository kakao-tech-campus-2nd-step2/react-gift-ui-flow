{"ast":null,"code":"var _jsxFileName = \"/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Button/Button.tsx\";\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyles = css`\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n\n  &.button--primary {\n    color: white;\n    background-color: #1ea7fd;\n  }\n\n  &.button--secondary {\n    color: #333;\n    background-color: transparent;\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  }\n\n  &.button--small {\n    font-size: 12px;\n    padding: 10px 16px;\n  }\n\n  &.button--medium {\n    font-size: 14px;\n    padding: 11px 20px;\n  }\n\n  &.button--large {\n    font-size: 16px;\n    padding: 12px 24px;\n  }\n\n  @media (max-width: 600px) {\n    &.button--responsive {\n      font-size: 12px;\n      padding: 8px 16px;\n    }\n  }\n\n  @media (min-width: 601px) and (max-width: 1200px) {\n    &.button--responsive {\n      font-size: 24px;\n      padding: 16px 32px;\n    }\n  }\n\n  @media (min-width: 1201px) {\n    &.button--responsive {\n      font-size: 36px;\n      padding: 24px 48px;\n    }\n  }\n\n  &.button--con {\n    background-color: green !important;\n    color: white !important;\n  }\n\n  &.button--muji {\n    background-color: yellow !important;\n    color: black !important;\n  }\n\n  &.button--jayg {\n    background-color: brown !important;\n    color: whitesmoke !important;\n  }\n`;\nconst StyledButton = styled.button`\n  ${buttonStyles}\n`;\n_c = StyledButton;\nexport const Button = ({\n  primary = false,\n  size = 'medium',\n  backgroundColor = '',\n  label,\n  theme,\n  ...props\n}) => {\n  let themeType = '';\n  switch (theme) {\n    case 'Con':\n      themeType = 'button--con';\n      break;\n    case 'Muji':\n      themeType = 'button--muji';\n      break;\n    case 'JayG':\n      themeType = 'button--jayg';\n      break;\n    default:\n      themeType = '';\n  }\n\n  // mode 변수에서 결정한 primary prop의 값에 따라 CSS 적용\n  const mode = primary ? 'button--primary' : 'button--secondary';\n  const sizeClass = size === 'responsive' ? 'button--responsive' : `button--${size}`;\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    type: \"button\",\n    className: ['button', sizeClass, mode, themeType].join(' '),\n    style: {\n      backgroundColor\n    },\n    ...props,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\n;\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"primary\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"backgroundColor\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      }\n    },\n    \"size\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'small' | 'medium' | 'large'| 'responsive'\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'small'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'medium'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'large'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'responsive'\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      }\n    },\n    \"label\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"() => void\",\n        \"signature\": {\n          \"arguments\": [],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"theme\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'Con' | 'Muji' | 'JayG'\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'Con'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'Muji'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'JayG'\"\n        }]\n      },\n      \"description\": \"\"\n    }\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["css","styled","jsxDEV","_jsxDEV","buttonStyles","StyledButton","button","_c","Button","primary","size","backgroundColor","label","theme","props","themeType","mode","sizeClass","type","className","join","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","__docgenInfo","$RefreshReg$"],"sources":["/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/components/Button/Button.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\ninterface ButtonProps {\n  primary?: boolean;\n  backgroundColor?: string;\n  size?: 'small' | 'medium' | 'large'| 'responsive';\n  label: string;\n  onClick?: () => void;\n  theme?: 'Con' | 'Muji' | 'JayG';\n}\n\nconst buttonStyles = css`\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n\n  &.button--primary {\n    color: white;\n    background-color: #1ea7fd;\n  }\n\n  &.button--secondary {\n    color: #333;\n    background-color: transparent;\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  }\n\n  &.button--small {\n    font-size: 12px;\n    padding: 10px 16px;\n  }\n\n  &.button--medium {\n    font-size: 14px;\n    padding: 11px 20px;\n  }\n\n  &.button--large {\n    font-size: 16px;\n    padding: 12px 24px;\n  }\n\n  @media (max-width: 600px) {\n    &.button--responsive {\n      font-size: 12px;\n      padding: 8px 16px;\n    }\n  }\n\n  @media (min-width: 601px) and (max-width: 1200px) {\n    &.button--responsive {\n      font-size: 24px;\n      padding: 16px 32px;\n    }\n  }\n\n  @media (min-width: 1201px) {\n    &.button--responsive {\n      font-size: 36px;\n      padding: 24px 48px;\n    }\n  }\n\n  &.button--con {\n    background-color: green !important;\n    color: white !important;\n  }\n\n  &.button--muji {\n    background-color: yellow !important;\n    color: black !important;\n  }\n\n  &.button--jayg {\n    background-color: brown !important;\n    color: whitesmoke !important;\n  }\n`;\n\nconst StyledButton = styled.button<ButtonProps>`\n  ${buttonStyles}\n`;\n\n\nexport const Button = ({\n  primary = false,\n  size = 'medium',\n  backgroundColor = '',\n  label,\n  theme,\n  ...props\n}: ButtonProps) => {\n\n  let themeType = '';\n  switch (theme) {\n    case 'Con':\n      themeType = 'button--con';\n      break;\n    case 'Muji':\n      themeType = 'button--muji';\n      break;\n    case 'JayG':\n      themeType = 'button--jayg';\n      break;\n    default:\n      themeType = '';\n  }\n\n  // mode 변수에서 결정한 primary prop의 값에 따라 CSS 적용\n  const mode = primary ? 'button--primary' : 'button--secondary';\n  const sizeClass = size === 'responsive' ? 'button--responsive' : `button--${size}`;\n  return (\n    <StyledButton\n      type='button'\n      className={['button', sizeClass, mode, themeType].join(' ')}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </StyledButton>\n  );\n};"],"mappings":";AAAA,SAAAA,GAAA;AACA,OAAAC,MAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAAC,YAAA,GAAAJ,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAAK,YAAA,GAAAJ,MAAA,CAAAK,MAAA;AACA,IAAAF,YAAA;AACA;AAAAG,EAAA,GAFAF,YAAA;AAKA,aAAAG,MAAA,GAAAA,CAAA;EACAC,OAAA;EACAC,IAAA;EACAC,eAAA;EACAC,KAAA;EACAC,KAAA;EACA,GAAAC;AACA;EAEA,IAAAC,SAAA;EACA,QAAAF,KAAA;IACA;MACAE,SAAA;MACA;IACA;MACAA,SAAA;MACA;IACA;MACAA,SAAA;MACA;IACA;MACAA,SAAA;EACA;;EAEA;EACA,MAAAC,IAAA,GAAAP,OAAA;EACA,MAAAQ,SAAA,GAAAP,IAAA,sDAAAA,IAAA;EACA,oBACAP,OAAA,CAAAE,YAAA;IACAa,IAAA;IACAC,SAAA,aAAAF,SAAA,EAAAD,IAAA,EAAAD,SAAA,EAAAK,IAAA;IACAC,KAAA;MAAAV;IAAA;IAAA,GACAG,KAAA;IAAAQ,QAAA,EAEAV;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA;AAEA;AAAAC,GAAA,GArCAnB,MAAA;AAqCA;AAAAA,MAAA,CAAAoB,YAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;QAAA;UAAA;UAAA;YAAA;UAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;MAAA;MAAA;IAAA;EAAA;AAAA;AAAA,IAAArB,EAAA,EAAAoB,GAAA;AAAAE,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}