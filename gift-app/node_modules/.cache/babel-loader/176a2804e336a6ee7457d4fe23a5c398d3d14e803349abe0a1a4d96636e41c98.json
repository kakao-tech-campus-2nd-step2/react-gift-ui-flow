{"ast":null,"code":"var _jsxFileName = \"/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/hooks/LoginContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useMemo, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext(undefined);\nexport const LoginProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [redirectPath, setRedirectPath] = useState('/');\n  useEffect(() => {\n    const authToken = sessionStorage.getItem('authToken');\n    if (authToken) {\n      setIsLoggedIn(true);\n      setUsername(authToken);\n    }\n  }, []);\n  const login = username => {\n    setIsLoggedIn(true);\n    setUsername(username);\n    sessionStorage.setItem('isLoggedIn', 'true');\n    sessionStorage.setItem('username', username);\n    sessionStorage.setItem('authToken', username);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUsername('');\n    sessionStorage.removeItem('isLoggedIn');\n    sessionStorage.removeItem('username');\n    sessionStorage.removeItem('authToken');\n  };\n  const setRedirectPathHandler = path => {\n    setRedirectPath(path);\n    sessionStorage.setItem('redirectPath', path);\n  };\n  const value = useMemo(() => ({\n    isLoggedIn,\n    username,\n    login,\n    logout,\n    setRedirectPath: setRedirectPathHandler,\n    redirectPath\n  }), [isLoggedIn, username, redirectPath]);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginProvider, \"0Q4BaGsjrc8kB8Q3MMtolBfmMow=\");\n_c = LoginProvider;\nexport const useLogin = () => {\n  _s2();\n  const context = useContext(LoginContext);\n  if (!context) {\n    throw new Error('useLogin은 LoginProvider 내에서 사용해야 합니다.');\n  }\n  return context;\n};\n_s2(useLogin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useMemo","useEffect","jsxDEV","_jsxDEV","LoginContext","undefined","LoginProvider","children","_s","isLoggedIn","setIsLoggedIn","username","setUsername","redirectPath","setRedirectPath","authToken","sessionStorage","getItem","login","setItem","logout","removeItem","setRedirectPathHandler","path","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLogin","_s2","context","Error","$RefreshReg$"],"sources":["/Users/a/qqu/kateCam/step2/week2/react-gift-ui-flow/gift-app/src/hooks/LoginContext.tsx"],"sourcesContent":["import { createContext, useState, ReactNode, useContext, useMemo, useEffect } from 'react';\n\ninterface LoginContextProps {\n  isLoggedIn: boolean;\n  username: string;\n  login: (username: string) => void;\n  logout: () => void;\n  setRedirectPath: (path: string) => void;\n  redirectPath: string;\n}\n\nconst LoginContext = createContext<LoginContextProps | undefined>(undefined);\n\ninterface LoginProviderProps {\n  children: ReactNode;\n}\n\nexport const LoginProvider = ({ children }: LoginProviderProps) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [redirectPath, setRedirectPath] = useState('/');\n\n  useEffect(() => {\n    const authToken = sessionStorage.getItem('authToken');\n    if (authToken) {\n      setIsLoggedIn(true);\n      setUsername(authToken);\n    }\n  }, []);\n\n  const login = (username: string) => {\n    setIsLoggedIn(true);\n    setUsername(username);\n    sessionStorage.setItem('isLoggedIn', 'true');\n    sessionStorage.setItem('username', username);\n    sessionStorage.setItem('authToken', username);\n  };\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUsername('');\n    sessionStorage.removeItem('isLoggedIn');\n    sessionStorage.removeItem('username');\n    sessionStorage.removeItem('authToken');\n  };\n\n  const setRedirectPathHandler = (path: string) => {\n    setRedirectPath(path);\n    sessionStorage.setItem('redirectPath', path);\n  };\n\n  const value = useMemo(\n    () => ({ isLoggedIn, username, login, logout, setRedirectPath: setRedirectPathHandler, redirectPath }),\n    [isLoggedIn, username, redirectPath]\n  );\n\n  return (\n    <LoginContext.Provider value={value}>\n      {children}\n    </LoginContext.Provider>\n  );\n};\n\nexport const useLogin = () => {\n  const context = useContext(LoginContext);\n  if (!context) {\n    throw new Error('useLogin은 LoginProvider 내에서 사용해야 합니다.');\n  }\n  return context;\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAaC,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW3F,MAAMC,YAAY,gBAAGP,aAAa,CAAgCQ,SAAS,CAAC;AAM5E,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAA6B,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC;EAErDG,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IACrD,IAAIF,SAAS,EAAE;MACbL,aAAa,CAAC,IAAI,CAAC;MACnBE,WAAW,CAACG,SAAS,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAIP,QAAgB,IAAK;IAClCD,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAACD,QAAQ,CAAC;IACrBK,cAAc,CAACG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;IAC5CH,cAAc,CAACG,OAAO,CAAC,UAAU,EAAER,QAAQ,CAAC;IAC5CK,cAAc,CAACG,OAAO,CAAC,WAAW,EAAER,QAAQ,CAAC;EAC/C,CAAC;EAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBV,aAAa,CAAC,KAAK,CAAC;IACpBE,WAAW,CAAC,EAAE,CAAC;IACfI,cAAc,CAACK,UAAU,CAAC,YAAY,CAAC;IACvCL,cAAc,CAACK,UAAU,CAAC,UAAU,CAAC;IACrCL,cAAc,CAACK,UAAU,CAAC,WAAW,CAAC;EACxC,CAAC;EAED,MAAMC,sBAAsB,GAAIC,IAAY,IAAK;IAC/CT,eAAe,CAACS,IAAI,CAAC;IACrBP,cAAc,CAACG,OAAO,CAAC,cAAc,EAAEI,IAAI,CAAC;EAC9C,CAAC;EAED,MAAMC,KAAK,GAAGxB,OAAO,CACnB,OAAO;IAAES,UAAU;IAAEE,QAAQ;IAAEO,KAAK;IAAEE,MAAM;IAAEN,eAAe,EAAEQ,sBAAsB;IAAET;EAAa,CAAC,CAAC,EACtG,CAACJ,UAAU,EAAEE,QAAQ,EAAEE,YAAY,CACrC,CAAC;EAED,oBACEV,OAAA,CAACC,YAAY,CAACqB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EACjCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,EAAA,CA5CWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA8C1B,OAAO,MAAMyB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGlC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAAC6B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}